<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Software Engineering on Home</title><link>ninerdelta.github.io/tags/software-engineering/</link><description>Recent content in Software Engineering on Home</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 29 Jan 2018 22:11:59 -0800</lastBuildDate><atom:link href="ninerdelta.github.io/tags/software-engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>Unity Journal 3 - best practices, software engineering</title><link>ninerdelta.github.io/post/2018/01/29/unity-journal-3-best-practices-software-engineering/</link><pubDate>Mon, 29 Jan 2018 22:11:59 -0800</pubDate><guid>ninerdelta.github.io/post/2018/01/29/unity-journal-3-best-practices-software-engineering/</guid><description>50 Tips and Best Practices
Learn to use coroutines effectively parallel, series, custom Avoid using different idioms to do the same thing Use singletons for convenience mainly useful for &amp;ldquo;manager&amp;rdquo; objects define static properties &amp;amp; methods to enable &amp;ldquo;Manager.player&amp;rdquo; and avoid having to use &amp;ldquo;Manager.Instance.player&amp;rdquo; Learn how to use debugging facilities effectively Make use of third party extensions as well Automated Build Pipeline Case Study - GoodbyeWorld Games</description></item></channel></rss>