<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev Journal on Home</title><link>https://www.ninerdelta.com/categories/dev-journal/</link><description>Recent content in Dev Journal on Home</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 26 May 2022 02:27:44 -0500</lastBuildDate><atom:link href="https://www.ninerdelta.com/categories/dev-journal/index.xml" rel="self" type="application/rss+xml"/><item><title>Vulkan Progress 1</title><link>https://www.ninerdelta.com/post/2022/05/26/vulkan-progress-1/</link><pubDate>Thu, 26 May 2022 02:27:44 -0500</pubDate><guid>https://www.ninerdelta.com/post/2022/05/26/vulkan-progress-1/</guid><description>Progress Pics I have managed to get triangle rendering in Dear ImGui.
Resources ImGui Vulkan + SDL example Sascha Willems Vulkan samples Vulkan Programming Guide API Without Secrets Khronos Notes I&amp;rsquo;m going pretty slow and looking up pretty much every function and struct. It takes a lot of code, and there are a lot of concepts to build up a mental model for. Pipelines, render passes, attachments, queues etc.</description></item><item><title>Win X64 Asm 1</title><link>https://www.ninerdelta.com/post/2020/12/16/win-x64-asm-1/</link><pubDate>Wed, 16 Dec 2020 01:19:23 -0600</pubDate><guid>https://www.ninerdelta.com/post/2020/12/16/win-x64-asm-1/</guid><description>Intro I&amp;rsquo;m working through the book &amp;ldquo;Windows 64-bit Assembly Language Programming&amp;rdquo; and taking some notes.
My first notes are about environment setup, and working on Chapter 3 &amp;ldquo;Hello World&amp;rdquo;.
A few tutorials I&amp;rsquo;ve seen use assemblers like FASM or NASM, but the book uses ML64 so that is what I used as well.
Setup To get setup with ML64 the book recommended searching for ml64.exe and adding it to the path.</description></item><item><title>Graphics Dev Journal 1</title><link>https://www.ninerdelta.com/post/2018/06/27/graphics-dev-journal-1/</link><pubDate>Wed, 27 Jun 2018 19:46:16 -0700</pubDate><guid>https://www.ninerdelta.com/post/2018/06/27/graphics-dev-journal-1/</guid><description>A Journey Through Space Transformations NOTE: THIS POST CONTAINS MATH ERRORS (12/14/2020)
Say the point p0 is in object space and its coordinates are {0, 2, 0, 1} so just a point on the Y axis.
p0 is placed in world space by a model transformation shown in Figure 1, that is, no rotation, just translated along Z axis by 5 units.
The camera is sitting at the origin of world space but &amp;ldquo;looking&amp;rdquo; down the -Z axis, so the camera&amp;rsquo;s location in world space is c0 = {0, 0, 0, 1} and its coordinate system can be represented as shown in Figure 2, and then combining its location and coordinate system into view matrix also shown in Figure 2</description></item></channel></rss>