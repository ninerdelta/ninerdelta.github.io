<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C++ on Home</title><link>ninerdelta.github.io/categories/c++/</link><description>Recent content in C++ on Home</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 20 Oct 2021 00:48:10 -0500</lastBuildDate><atom:link href="ninerdelta.github.io/categories/c++/index.xml" rel="self" type="application/rss+xml"/><item><title>Deep (ish) Dive into Microsoft std::thread Constructor Implementation</title><link>ninerdelta.github.io/post/2021/10/20/deep-ish-dive-into-microsoft-stdthread-constructor-implementation/</link><pubDate>Wed, 20 Oct 2021 00:48:10 -0500</pubDate><guid>ninerdelta.github.io/post/2021/10/20/deep-ish-dive-into-microsoft-stdthread-constructor-implementation/</guid><description>Introduction As of C++11 the STL defines a thread class. Most documentation and examples I&amp;rsquo;ve found cover usage pretty well, but leave deeper understanding as an exercise to the reader. So that&amp;rsquo;s the goal of this discussion.
The following discussion assumes a basic understanding of std::thread as documented here or here.
While using std::thread, eventually you will need to do something similar to example 1 (pass a parameter to a function by reference).</description></item></channel></rss>